{
  "desc": "elpi",
  "deps": [],
  "archive": "elpi.coq-pkg",
  "pkgs": [
    {
      "pkg_id": [ "elpi" ],
      "vo_files": [ [ "elpi_plugin.vo", null ], [ "derive.vo", null ], [ "elpi.vo", null ] ],
      "cma_files": []
    },
    {
      "pkg_id": [ "elpi", "derive" ],
      "vo_files": [
        [ "bcongr.vo", null ],
        [ "cast.vo", null ],
        [ "eq.vo", null ],
        [ "eqK.vo", null ],
        [ "eqOK.vo", null ],
        [ "eqOK_trivial.vo", null ],
        [ "eqcorrect.vo", null ],
        [ "idx2inv.vo", null ],
        [ "induction.vo", null ],
        [ "invert.vo", null ],
        [ "isK.vo", null ],
        [ "map.vo", null ],
        [ "param1.vo", null ],
        [ "param1_congr.vo", null ],
        [ "param1_functor.vo", null ],
        [ "param1_inhab.vo", null ],
        [ "param1_trivial.vo", null ],
        [ "param2.vo", null ],
        [ "projK.vo", null ]
      ],
      "cma_files": []
    },
    {
      "pkg_id": [ "elpi", "derive", "tests" ],
      "vo_files": [
        [ "test_bcongr.vo", null ],
        [ "test_derive.vo", null ],
        [ "test_derive_stdlib.vo", null ],
        [ "test_derive_vector.vo", null ],
        [ "test_eq.vo", null ],
        [ "test_eqK.vo", null ],
        [ "test_eqOK.vo", null ],
        [ "test_eqcorrect.vo", null ],
        [ "test_idx2inv.vo", null ],
        [ "test_induction.vo", null ],
        [ "test_invert.vo", null ],
        [ "test_isK.vo", null ],
        [ "test_map.vo", null ],
        [ "test_param1.vo", null ],
        [ "test_param1_congr.vo", null ],
        [ "test_param1_functor.vo", null ],
        [ "test_param1_inhab.vo", null ],
        [ "test_param1_trivial.vo", null ],
        [ "test_param2.vo", null ],
        [ "test_projK.vo", null ]
      ],
      "cma_files": []
    }
  ],
  "modDeps": {
    "elpi.derive": [ "elpi.derive.eq" ],
    "elpi.elpi": [ "Coq.Init.Ltac", "Coq.Bool.Bool" ],
    "elpi.derive.bcongr": [ "Coq.Bool.Bool", "elpi.elpi", "elpi.derive.projK" ],
    "elpi.derive.cast": [ "elpi.elpi" ],
    "elpi.derive.eq": [ "Coq.Bool.Bool", "elpi.elpi" ],
    "elpi.derive.eqK": [ "elpi.elpi", "elpi.derive.bcongr", "elpi.derive.eq" ],
    "elpi.derive.eqOK": [
      "elpi.elpi",
      "elpi.derive.param1",
      "elpi.derive.param1_inhab",
      "elpi.derive.param1_trivial",
      "elpi.derive.eqK",
      "elpi.derive.eqcorrect"
    ],
    "elpi.derive.eqOK_trivial": [ "elpi.elpi" ],
    "elpi.derive.eqcorrect": [
      "elpi.elpi",
      "elpi.derive.eq",
      "elpi.derive.map",
      "elpi.derive.induction",
      "elpi.derive.eqK"
    ],
    "elpi.derive.idx2inv": [ "elpi.elpi", "elpi.derive.invert" ],
    "elpi.derive.induction": [ "elpi.elpi", "elpi.derive.param1", "elpi.derive.param1_functor" ],
    "elpi.derive.invert": [ "elpi.elpi" ],
    "elpi.derive.isK": [ "elpi.elpi" ],
    "elpi.derive.map": [ "elpi.elpi" ],
    "elpi.derive.param1": [ "elpi.elpi" ],
    "elpi.derive.param1_congr": [ "elpi.elpi", "elpi.derive.param1" ],
    "elpi.derive.param1_functor": [ "elpi.elpi" ],
    "elpi.derive.param1_inhab": [ "elpi.elpi", "elpi.derive.param1" ],
    "elpi.derive.param1_trivial": [
      "elpi.elpi",
      "elpi.derive.param1",
      "elpi.derive.param1_congr",
      "elpi.derive.param1_inhab"
    ],
    "elpi.derive.param2": [ "elpi.elpi" ],
    "elpi.derive.projK": [ "elpi.elpi" ],
    "elpi.derive.tests.test_bcongr": [
      "elpi.derive.bcongr",
      "elpi.derive.tests.test_derive_stdlib",
      "elpi.derive.tests.test_projK"
    ],
    "elpi.derive.tests.test_derive": [
      "elpi.derive",
      "elpi.derive.tests.test_derive_stdlib",
      "Coq.Vectors.Vector"
    ],
    "elpi.derive.tests.test_derive_vector": [ "elpi.derive", "elpi.derive.tests.test_derive_stdlib" ],
    "elpi.derive.tests.test_eq": [ "elpi.derive.tests.test_derive_stdlib", "elpi.derive.eq" ],
    "elpi.derive.tests.test_eqK": [ "elpi.elpi", "elpi.derive.eqK", "elpi.derive.tests.test_derive_stdlib" ],
    "elpi.derive.tests.test_eqOK": [
      "elpi.derive.eqOK",
      "elpi.derive.tests.test_derive_stdlib",
      "elpi.derive.tests.test_eqcorrect",
      "elpi.derive.tests.test_param1",
      "elpi.derive.tests.test_param1_inhab",
      "elpi.derive.tests.test_param1_trivial",
      "elpi.derive.tests.test_param1_functor"
    ],
    "elpi.derive.tests.test_eqcorrect": [
      "elpi.derive.eqcorrect",
      "elpi.derive.tests.test_derive_stdlib",
      "elpi.derive.tests.test_eq",
      "elpi.derive.tests.test_param1",
      "elpi.derive.tests.test_param1_functor",
      "elpi.derive.tests.test_induction",
      "elpi.derive.tests.test_eqK"
    ],
    "elpi.derive.tests.test_idx2inv": [
      "elpi.derive.param1",
      "elpi.derive.param1_inhab",
      "elpi.derive.invert",
      "elpi.derive.induction",
      "elpi.derive.idx2inv"
    ],
    "elpi.derive.tests.test_induction": [
      "elpi.derive.induction",
      "elpi.derive.tests.test_derive_stdlib",
      "elpi.derive.tests.test_param1",
      "elpi.derive.tests.test_param1_functor"
    ],
    "elpi.derive.tests.test_invert": [ "elpi.derive.invert" ],
    "elpi.derive.tests.test_isK": [ "elpi.derive.tests.test_derive_stdlib", "elpi.derive.isK" ],
    "elpi.derive.tests.test_map": [ "elpi.derive.map", "elpi.derive.tests.test_derive_stdlib" ],
    "elpi.derive.tests.test_param1": [ "elpi.derive.param1", "elpi.derive.tests.test_derive_stdlib" ],
    "elpi.derive.tests.test_param1_congr": [
      "elpi.derive.param1_congr",
      "elpi.derive.tests.test_derive_stdlib",
      "elpi.derive.tests.test_param1"
    ],
    "elpi.derive.tests.test_param1_functor": [
      "elpi.derive.param1_functor",
      "elpi.derive.tests.test_derive_stdlib",
      "elpi.derive.tests.test_param1"
    ],
    "elpi.derive.tests.test_param1_inhab": [
      "elpi.derive.param1_inhab",
      "elpi.derive.tests.test_derive_stdlib",
      "elpi.derive.tests.test_param1"
    ],
    "elpi.derive.tests.test_param1_trivial": [
      "elpi.derive.param1_trivial",
      "elpi.derive.tests.test_derive_stdlib",
      "elpi.derive.tests.test_param1",
      "elpi.derive.tests.test_param1_inhab",
      "elpi.derive.tests.test_param1_congr"
    ],
    "elpi.derive.tests.test_param2": [ "elpi.derive.param2" ],
    "elpi.derive.tests.test_projK": [ "elpi.derive.tests.test_derive_stdlib", "elpi.derive.projK" ]
  }
}