html {
  margin: 0;
  padding: 0;
}

body {
  margin: 0;
  padding: 0;
  background: #888;
  -webkit-transition: background-color 1000ms linear;
  -ms-transition: background-color 1000ms linear;
  transition: background-color 1000ms linear;
}

#tutorial {
  background: white;
  border: thick solid #ddd;
  border-radius: 2em;
  padding: 0.5em 2em 1.5em;
  max-width: 40em;
  margin: 2em auto;
  font-family: Helvetica,Arial,sans-serif;
  font-size: 120%;
  color: #333;
  line-height: 1.3em;
}

#tutorial pre {
  line-height: initial;
}

h1 {
  color: #222;
}

code {
  color: #04c;
  background: #eee;
  padding: 0.1em 0.3em;
}

input, select {
  padding: 0.3em !important;
}

pre em {
  color: red;
  font-style: normal;
}

kbd {
  color: #444;
  background-color: aliceblue;
  border: thin solid gray;
  border-radius: .5ex;
  padding-left: .5ex;
  padding-right: .5ex;
}

pre kbd {
  color: #04c;
  border: none;
  border-radius: 0;
  padding-left: initial;
  padding-right: initial;
}

pre {
  overflow: auto;	
  background: #eee;
  border: thin solid #ccc;
  padding: .5em;
  border-radius: .5em;
}

hr {
  margin: 1em 25%;
  height: .35ex;
  color: #aaa;
  background-color: #aaa;
  border: none;
  border-radius: .175ex;
}

/* TODO: use a technique like tinytypo's to change the quotes based on the language?
 * https://github.com/tetue/tinytypo/blob/5f7411746c8c4d634ac8cd14c730b86f4ffd1813/css/typo.css#L397
 */
blockquote {
  border-left: 0.85ex solid #ccc;
  padding: 0.8ex 1ex;
  background: #f0f0f0;
  margin: 1em 2em;
}

/* An <ul> appearing at the end of a blockquote has too much vertical space following it. */
ul:last-child {
  margin-bottom: .25ex
}

.varblock {
  display: inline-block;
  border: thin solid #888;
  padding: 0 .5em;
  border-radius: .5em;
}

/* Coqueligot-specific styles */
.toggle.hidden {
  opacity: 0.2;
}

.toggle.hidden:hover {
  opacity: 0.5;
}

html #jscoq-plug { /* override using html as an extra qualifier */
  position: fixed;
}

html .coq-eval-ok { /* override using html as an extra qualifier */
  background-color: #bef0be;
}

html .coq-eval-pending { /* override using html as an extra qualifier */
  background-color: #bebef0;
}

.waiting #jscoq-plug::after {
  content: '▶️' !important;
  opacity: 0;
  color: black;
  padding-left: 35px;
  display: block;
  height: 32px;
  line-height: 32px;
  vertical-align: middle;

  animation: pulse-opacity-animation 1s steps(5, start) infinite;
  -webkit-animation: pulse-opacity-animation 1s steps(5, start) infinite;
  animation-direction: alternate;
  -webkit-animation-direction: alternate;
}

.waiting .CodeMirror {
  cursor: wait !important;
}

html .waiting #jscoq-plug {
  width: 60px !important;
}

@keyframes pulse-opacity-animation {
  to {
    opacity:1;
  }
}
@-webkit-keyframes pulse-opacity-animation {
  to {
    opacity: 1;
  }
}

.insertTacticFailed {
  background-size: 16px;
  background: url('node_modules/wacoq/ui-images/log-error.png') top 2px left 2px/16px no-repeat, lightyellow;
  padding-left: 20px;
}

.floating-toolbar {
  position: absolute;
  z-index: 1000;
  border: thin solid rgb(117, 117, 210);
  border-radius: 1ex;
  padding: 0;
  background: rgb(192, 214, 222);
}

.floating-toolbar-button:focus, .floating-toolbar-button:active, .floating-toolbar-button:hover,
.in-code-button:focus, .in-code-button:active, .in-code-button:hover {
  text-decoration: underline;
}

.floating-toolbar-button, .in-code-button {
  /* reset browser button style */
  border: none;
  background: transparent;
  font-family: monospace;
  font-size: 11pt;
  /* end reset */
}

.floating-toolbar-button {
  display: inline-block;
  padding: 0.5ex 1ex;
  color: black;
  cursor: pointer;
  border-right: 1px solid rgb(140, 150, 153);
}

.floating-toolbar-button.click-me {
  background: #bef0be;
}

.floating-toolbar-button:first-child {
  border-top-left-radius: 1ex;
  border-bottom-left-radius: 1ex;
}

.floating-toolbar-button:last-child {
  border-right: none;
  border-top-right-radius: 1ex;
  border-bottom-right-radius: 1ex;
}

.floating-toolbar-button:hover {
  color: blue;
  background: lavender;
}

html #ide-wrapper.toggled #panel-wrapper,
html #ide-wrapper.layout-flex > #panel-wrapper {
  overflow-x: hidden;
}

html #panel-wrapper > .flex-container {
  max-width: calc(38em - 1px);
  width: calc(45vw - 1px);
}

.in-code-button {
  border: thin solid blue;
  border-radius: 1ex;
  padding: 0 0.35ex;
  background: #c0cbff;
  margin-left: 1ex;
  font-size: calc(1em - 2px);
  position: relative;
  bottom: 1px;
  cursor: pointer;
}

.in-code-button.click-me {
  border: thin solid green;
  background: #c0ffcb;
}

.in-code-button.in-code-button-remove {
  border-color: red;
  background-color: pink;
}


.CodeMirror-linenumber:hover {
  text-decoration: underline;
  color: #444;
}
.CodeMirror-linenumber:hover:before {
  content: '#';
  display: inline-block;
  position: relative;
  width: 0;
  left: -1.3ex;
  padding: 0;
  margin: 0;
}

main > article:first-child {
  /* Needed because this element is scrolled, and we need to position some children in absolute */
  position: relative;
}

#overlays {
  top: 0;
  left: 0;
  width: 100vw !important; /* override something in jsCoq's CSS */
  height: 100vh;
  position: absolute;
  overflow: hidden;
  pointer-events: none;
}

.circle-around-hidden {
  filter: blur(20px) opacity(0);
}

@property --circle-around-size {
  syntax: '<percentage>';
  inherits: false;
  initial-value: 36%;
}

@property --circle-around-spread {
  syntax: '<length>';
  inherits: false;
  initial-value: 0.7ex;
}

@property --circle-around-color {
  syntax: '<color>';
  inherits: false;
  initial-value: yellowgreen;
}

@property --circle-around-end {
  syntax: '<number>';
  inherits: false;
  initial-value: 0.4;
}

@property --circle-around-full-loops {
  syntax: '<integer>';
  inherits: false;
  initial-value: 2;
}

@property --circle-around-duration {
  syntax: '<time>';
  inherits: false;
  initial-value: 2.5s;
}

.circle-around-hidden {
  filter: blur(20px) opacity(0);
}

.circle-around {
  position: absolute;
  z-index: 1000;
  /*border-radius: 5em;*/
  animation: opacity-circle-animation var(--circle-around-duration) ease calc(var(--circle-around-full-loops) + var(--circle-around-end)) forwards,
	         color-circle-animation var(--circle-around-duration) linear calc(var(--circle-around-full-loops) + var(--circle-around-end)) forwards,
	         size-circle-animation var(--circle-around-duration) linear calc(var(--circle-around-full-loops) + var(--circle-around-end)) forwards,
	         size-circle-animation-end calc(var(--circle-around-duration) * var(--circle-around-end)) cubic-bezier(1, 0, 0, 1) calc(var(--circle-around-duration) * var(--circle-around-full-loops)) 1 forwards;
  transition: filter 1s linear;
  background: radial-gradient(ellipse at center, transparent calc(var(--circle-around-size) - var(--circle-around-spread)),var(--circle-around-color) var(--circle-around-size),transparent calc(var(--circle-around-size) + var(--circle-around-spread)));
  pointer-events: none;
  view-timeline-name: --foobar;
}

/*@keyframes opacity-circle-animation {
  0% {
	opacity: 0;
	animation-timing-function: cubic-bezier(0.5, 0, 0.1, 1)
  }
  40% {
    opacity: 1;
	animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  }
  100% {
    opacity: 0;
  }
}

@keyframes size-circle-animation {
  0% {
    outline: forestgreen solid 0.3ex;
    outline-offset: 0ex;
  }
  100% {
    outline: yellowgreen solid 1ex;
    outline-offset: 4ex;
  }
}*/

@keyframes opacity-circle-animation {
  0% {
	opacity: 0;
	animation-timing-function: cubic-bezier(0.5, 0, 0.1, 1)
  }
  40% {
    opacity: 1;
	animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  }
  100% {
    opacity: 0;
  }
}

@keyframes color-circle-animation {
  0% {
    animation-timing-function: ease-out;
    --circle-around-color: forestgreen;
  }
  100% {
    --circle-around-color: yellowgreen;
  }
}

@keyframes size-circle-animation {
  0% {
    animation-timing-function: ease-in-out;
    --circle-around-size: 20%;
    --circle-around-spread: 0.5ex;
    /*outline: forestgreen solid 0.3ex;*/
    /*outline-offset: 0ex;*/
  }
  100% {
    --circle-around-size: 60%;
    --circle-around-spread: 1ex;
    /*outline: yellowgreen solid 1ex;*/
    /*outline-offset: 4ex;*/
  }
}

@keyframes size-circle-animation-end {
  0% {
    animation-timing-function: ease-in-out;
    --circle-around-size: 20%;
    --circle-around-spread: 0.5ex;
  }
  100% {
    --circle-around-size: calc(20% + (40% * var(--circle-around-end)));
    --circle-around-spread: calc(0.5ex + (0.5ex * var(--circle-around-end)));
  }
}

.circle-around::before {
  content:'';
  position: fixed;
  top: -5ex;
  left: 0;
  width: calc( max( 100% - 38em, 55% ) );
  height: 10ex;
  background: radial-gradient(ellipse at center, green, transparent 50%);
  animation: circle-around-near-top 5s linear both;
  animation-timeline: --foobar;
}

.circle-around::after {
  content:'';
  position: fixed;
  bottom: -5ex;
  left: 0;
  width: calc( max( 100% - 38em, 55% ) );
  height: 10ex;
  background: radial-gradient(ellipse at center, green, transparent 50%);
  animation: circle-around-near-bottom 5s linear both;
  animation-timeline: --foobar;
}

.circle-around.circle-around-hidden::before {
  display: none;
}

.circle-around.circle-around-hidden::after {
  display: none;
}

@keyframes circle-around-near-bottom {
  0% {
    bottom: -5ex;
  }
  20% {
    bottom: -10ex;
  }
  100% {
    bottom: -10ex;
  }
}

@keyframes circle-around-near-top {
  0% {
    top: -10ex;
  }
  80% {
    top: -10ex;
  }
  100% {
    top: -5ex;
  }
}